{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steam\\\\OneDrive\\\\\\u0420\\u043E\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u0456\\u043B\\\\Dev\\\\rr\\\\src\\\\App.js\";\nimport React, { useState, useMemo } from 'react';\nimport './App.css';\nimport Like from \"./img/like.svg\";\nimport Liked from \"./img/liked.svg\";\nimport Box from \"./img/box.png\";\nconst BOOKS_PAGE = '1lxN9WC-43jwJhJsC6bJYK63wCNnjOvLSgEMwzrDbkMA';\nconst API_KEY = 'AIzaSyBnsI4y-0LvVLPfxRK1Iu16h-xtxKH4KRc';\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n\n  const getBooks = async () => {\n    const respons = await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${BOOKS_PAGE}/values/Books!A2:D1000?majorDimension=ROWS&key=${API_KEY}`);\n    const data = await respons.json();\n    setBooks(() => {\n      return data.values.map((book, index) => {\n        return {\n          id: index + 100,\n          category: book[0],\n          image: book[1],\n          heading: book[2],\n          description: book[3]\n        };\n      });\n    });\n  };\n\n  const fetchBooks = useMemo(() => getBooks(), []);\n  const markup = {\n    book: ({\n      id,\n      heading,\n      description,\n      image\n    }) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: (id + 100).toString(),\n        className: \"book-wrapper book-wrapper__grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"book-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"book-image-wrapper\",\n        style: {\n          backgroundImage: `url(${image})`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"book-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }\n      }, heading), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"book-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }\n      }, description)), /*#__PURE__*/React.createElement(\"button\", {\n        className: favoritesBooksId.includes(id) ? \"book-to-favorite__disabled\" : \"book-to-favorite\",\n        dataId: id,\n        onClick: () => setFavoritesId(prev => [...prev, id]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: favoritesBooksId.includes(id) ? Liked : Like,\n        className: \"book-to-favorite-img\",\n        alt: \"Add to favorite\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }\n      }), favoritesBooksId.includes(id) ? 'Favorite!' : 'Add to favorites'));\n    },\n    favorites: ({\n      id,\n      heading,\n      image\n    }) => {\n      return /*#__PURE__*/React.createElement(\"table\", {\n        className: \"favorites-books\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"favorites-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"favorites-img-img\",\n        src: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"favorites-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, heading), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"favorites-del\",\n        dataId: id,\n        onClick: () => setFavoritesId(favoritesBooksId.filter(listedId => listedId != id)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, \"X\")));\n    }\n  };\n  const [favoritesBooksId, setFavoritesId] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const renderedBooks = [];\n  const renderedFav = [];\n\n  const renderFavorites = () => {\n    renderedFav.push(favoritesBooksId.map(id => books.filter(book => book.id == id).map(book => markup.favorites(book))));\n  };\n\n  renderFavorites();\n\n  const renderBooks = books => {\n    renderedBooks.length = 0;\n\n    if (filter === 'all') {\n      books.forEach(book => {\n        renderedBooks.push(markup.book(book));\n      });\n    } else {\n      books.filter(book => book.category === filter).forEach(book => {\n        renderedBooks.push(markup.book(book));\n      });\n    }\n  };\n\n  document.body.addEventListener('click', event => {\n    if (event.path.includes(document.querySelector('.favorites'))) {\n      event.preventDefault();\n      return false;\n    }\n\n    document.querySelector('.favorites-info').classList.remove('favorites-info__visible');\n  });\n  renderBooks(books);\n  const shownBooks = [];\n  const [shownBooksInPage, setShownBooksInPage] = useState(20);\n\n  const showBooks = () => {\n    for (var i = 0; i < shownBooksInPage; i++) {\n      shownBooks.push(renderedBooks[i]);\n    }\n\n    if (renderedBooks.length > shownBooksInPage) {\n      shownBooks.push( /*#__PURE__*/React.createElement(\"button\", {\n        className: \"load-more-btn\",\n        onClick: () => setShownBooksInPage(shownBooksInPage + 20),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, \"Load more\"));\n    }\n  };\n\n  showBooks(); // componentWillMount() {\n  //    localStorage.getItem('favorites') && this.setState({\n  //       favorites: JSON.parse(localStorage.getItem('favorites')),\n  //       isLoading: false\n  //    })\n  // }\n  // componentWillUpdate(nextProps, nextState){\n  //    localStorage.setItem('favorites', JSON.stringify(nextState.favoritesBooksId))\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 16\n    }\n  }, \"Choose what you love\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"filter\",\n    onChange: e => {\n      setFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, \"All that we love\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"fantasy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, \"Fantasy\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"classics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, \"Classics\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"teen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, \"Teen\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"fiction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, \"Fiction\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorites\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorites-icon-wrapper\",\n    onClick: () => {\n      document.querySelector('.favorites-info').classList.toggle('favorites-info__visible');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, favoritesBooksId.length || 0), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"favorites-icon\",\n    src: Box,\n    alt: \"Favorites\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"favorites-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"favorites-books\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"favorites-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 28\n    }\n  }, \"Photo\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"favorites-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 28\n    }\n  }, \"Book title\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"favorites-del-header\",\n    onClick: () => setFavoritesId([]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 28\n    }\n  }, \"Clear\"))), renderedFav)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"books-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 10\n    }\n  }, shownBooks));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/steam/OneDrive/Робочий стіл/Dev/rr/src/App.js"],"names":["React","useState","useMemo","Box","BOOKS_PAGE","API_KEY","App","books","setBooks","getBooks","respons","fetch","data","json","values","map","book","index","id","category","image","heading","description","fetchBooks","markup","toString","backgroundImage","favoritesBooksId","includes","setFavoritesId","prev","Liked","Like","favorites","filter","listedId","setFilter","renderedBooks","renderedFav","renderFavorites","push","renderBooks","length","forEach","document","body","addEventListener","event","path","querySelector","preventDefault","classList","remove","shownBooks","shownBooksInPage","setShownBooksInPage","showBooks","i","e","target","value","toggle"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport './App.css';\nimport Like from \"./img/like.svg\";\nimport Liked from \"./img/liked.svg\";\nimport Box from \"./img/box.png\"\n\nconst BOOKS_PAGE = '1lxN9WC-43jwJhJsC6bJYK63wCNnjOvLSgEMwzrDbkMA'\nconst API_KEY = 'AIzaSyBnsI4y-0LvVLPfxRK1Iu16h-xtxKH4KRc'\n\nfunction App() {\n   const [books, setBooks] = useState([])\n   const getBooks = async () => {\n   const respons = await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${BOOKS_PAGE}/values/Books!A2:D1000?majorDimension=ROWS&key=${API_KEY}`)\n   const data = await respons.json()\n   setBooks(()=>{return data.values.map((book, index)=>{\n      return {\n         id: index + 100,\n         category: book[0],\n         image: book[1],\n         heading: book[2],\n         description: book[3],\n      }\n    })})\n   }\n   const fetchBooks = useMemo(() => getBooks(), []);\n\n   const markup = {\n      book: ({id, heading, description, image}) => {\n         return (\n            <div key={(id+100).toString()} className=\"book-wrapper book-wrapper__grid\">\n               <div className=\"book-info\">\n                  <div className=\"book-image-wrapper\" style={{backgroundImage: `url(${image})`}}>\n                  </div>\n                  <h3 className=\"book-heading\">\n                     {heading}\n                  </h3>\n                  <div className=\"book-description\">\n                     {description}\n                  </div>\n               </div>\n               <button className={favoritesBooksId.includes(id) ? \"book-to-favorite__disabled\": \"book-to-favorite\"} \n               dataId={id} onClick={() => setFavoritesId(prev => [...prev, id])}> \n                  <img src={favoritesBooksId.includes(id) ? Liked : Like} className=\"book-to-favorite-img\" alt=\"Add to favorite\"/>\n                  {favoritesBooksId.includes(id) ? 'Favorite!' : 'Add to favorites'}\n               </button>\n            </div>\n         )\n      },\n      favorites: ({id, heading, image}) => {\n         return(\n            <table className=\"favorites-books\">\n               <tr>\n                  <td className=\"favorites-img\"><img className=\"favorites-img-img\" src={image}/></td>\n                  <td className=\"favorites-name\">{heading}</td>\n                  <td className=\"favorites-del\" dataId={id} onClick={() => \n                  setFavoritesId(\n                     favoritesBooksId.filter(listedId => listedId != id),\n                     )}\n                     >X</td>\n               </tr>\n            </table>\n         )\n      }\n   } \n   \n   const [favoritesBooksId, setFavoritesId] = useState([])\n   const [filter, setFilter] = useState('all')\n   const renderedBooks = []\n   const renderedFav = []\n   const renderFavorites = () =>{\n     renderedFav.push(favoritesBooksId.map(id => books.filter(book => book.id == id).map(book => markup.favorites(book))))\n   }\n   renderFavorites()\n   \n   const renderBooks = (books) => {\n      renderedBooks.length = 0\n      if (filter === 'all'){\n         books.forEach((book) => {\n            renderedBooks.push(markup.book(book))\n         })\n      } else {\n         books.filter(book => book.category === filter).forEach((book) => {\n            renderedBooks.push(markup.book(book))\n         })\n      }\n   }\n\n   document.body.addEventListener('click', (event) => {\n      if (event.path.includes(document.querySelector('.favorites'))) {\n         event.preventDefault();\n         return false;\n      }\n       document.querySelector('.favorites-info').classList.remove('favorites-info__visible')\n    })\n   \n   renderBooks(books)\n\n   const shownBooks = []\n   const [shownBooksInPage, setShownBooksInPage] = useState(20)\n  const showBooks = () => {\n      for(var i=0; i<shownBooksInPage; i++){\n      shownBooks.push(renderedBooks[i])\n      }\n   if(renderedBooks.length > shownBooksInPage) {shownBooks\n      .push(<button className=\"load-more-btn\" onClick={() => setShownBooksInPage(shownBooksInPage+20)}>Load more</button>)}\n  }\n  showBooks()\n\n   // componentWillMount() {\n   //    localStorage.getItem('favorites') && this.setState({\n   //       favorites: JSON.parse(localStorage.getItem('favorites')),\n   //       isLoading: false\n   //    })\n   // }\n   // componentWillUpdate(nextProps, nextState){\n   //    localStorage.setItem('favorites', JSON.stringify(nextState.favoritesBooksId))\n   // }\n\n   return(\n      <div>\n         <div className=\"header\">\n            <div className=\"filters\">\n               <p>Choose what you love</p>\n               <select className=\"filter\" onChange={(e) => {setFilter(e.target.value)}}>\n                  <option value=\"all\">All that we love</option>\n                  <option value=\"fantasy\">Fantasy</option>\n                  <option value=\"classics\">Classics</option>\n                  <option value=\"teen\">Teen</option>\n                  <option value=\"fiction\">Fiction</option>\n               </select>\n            </div>\n            <div className=\"favorites\">\n               <div className=\"heart\">\n                  <div className=\"favorites-icon-wrapper\" onClick={() => {\n                     document.querySelector('.favorites-info').classList.toggle('favorites-info__visible')\n                  }}>\n                  <div className=\"count\">{favoritesBooksId.length || 0}</div>  \n                  <img className=\"favorites-icon\" src={Box} alt=\"Favorites\" />\n               </div>\n                  <div className=\"favorites-info\">\n                  <table className=\"favorites-books\">\n                        <tr>\n                           <td className=\"favorites-img\">Photo</td>\n                           <td className=\"favorites-name\">Book title</td>\n                           <td className=\"favorites-del-header\" onClick={() => setFavoritesId([])}>Clear</td>\n                        </tr>\n               </table>\n                  {renderedFav} \n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"books-list\">\n            {shownBooks}\n         </div>\n      </div> \n   )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}